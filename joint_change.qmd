```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>", 
  warning = F,
  message = F
)
```

```{r, include = FALSE}
library(regress3d)
library(plotly)
library(stargazer)
la_counties <- subset(county_data, state_abbrv == "LA")
model1 <- lm(prcnt_GOP16 ~ median_income16_1k,  data = la_counties)
model2 <- lm(prcnt_GOP16 ~ median_income16_1k + prcnt_black, data = la_counties)
model3 <- lm(prcnt_black ~ median_income16_1k, data = la_counties)

income_seq <-  seq(min(la_counties$median_income16_1k, na.rm=TRUE),
                   max(la_counties$median_income16_1k, na.rm=TRUE),
                   length.out=10) 
income_seq <- data.frame(median_income16_1k =income_seq)
predicted_gop <- predict(object = model1, newdata = income_seq, 
                         interval = "confidence") %>%
  as.data.frame(.)
predicted_prcnt_black <- predict(object = model3, newdata = income_seq)

simulated_data_nested_model <- data.frame(median_income16_1k = income_seq,
                                          prcnt_black = predicted_prcnt_black,
                                          prcnt_GOP16 = predicted_gop$fit,
                                          lowerCI = predicted_gop$lwr,
                                          upperCI = predicted_gop$upr)

income_edu_data <- data.frame(median_income16_1k = income_seq,
                              prcnt_black = predicted_prcnt_black)
predicted_gop <- predict(object = model2, newdata = income_edu_data, interval = "confidence") %>%
  as.data.frame(.)
simulated_data_model2 <- data.frame(median_income16_1k = income_seq,
                                    prcnt_black = predicted_prcnt_black,
                                    prcnt_GOP16 = predicted_gop$fit,
                                    lowerCI = predicted_gop$lwr,
                                    upperCI = predicted_gop$upr)

```

# Interpreting Joint Changes in $x_1$ and $x_2$ {#sec-jointdir}

For reference, the equation for the estimated values of the nested model (Model \ref{ypredbyx1}) is:

\begin{align}
\hat{y} =& \hat{\beta}_1 x_1 + \hat{\beta}_0. \label{ypredbyx1} \\
\hat{\text{prcnt-GOP16}} =& \hat{\beta}_1*\text{median-income16-1k} + \hat{\beta}_0. \nonumber
\end{align}

The equation for the estimated values of the full model (Model \ref{ypredbyx1x2}) is:

\begin{align}
\hat{y} =& \hat{\beta}'_1 x_1 +\hat{\beta}'_2 x_2 + \hat{\beta}'_0 \label{ypredbyx1x2} \\
\hat{\text{prcnt-GOP16}} =& \hat{\beta}'_1*\text{median-income16-1k} +\hat{\beta}'_2*\text{prcnt-black} + \hat{\beta}'_0. \nonumber
\end{align}

The estimated values for the model that defines the direction of the change in $y$ in the nested model are generated from Model \ref{x1predbyx2}:

\begin{align*}
\hat{x}_2 =& \hat{\gamma}_1 x_1 + \hat{\gamma}_0 \label{x1predbyx2} \\
\hat{\text{prcnt-black}} =& \hat{\gamma}_1*\text{median-income16-1k} + \hat{\gamma}_0. \nonumber
\end{align*}

The nested model and the $\hat{\gamma}_1$ direction in the full model (Model \ref{ypredbyx1x2} are shown below in the regression surface generated by the full model.

```{r}
plot_ly( data = la_counties,
         x = ~median_income16_1k,
         y = ~prcnt_black,
         z = ~prcnt_GOP16) %>%
  add_markers(size = ~pop_estimate16, color = I("black"),
              name = "Louisiana counties") %>%
  add_3d_surface(model = model2)%>%
  add_direction(model = model2, direction_data = simulated_data_nested_model,
                direction_name = "Nested model:
                prcnt_GOP16 ~ median_income16_1k, omitting prcnt_black") %>%
  add_direction(model = model2, direction_data = simulated_data_model2,
                linecolor = "limegreen",
                direction_name = "The &#947;&#x0302; direction in Model 2:
                prcnt_GOP16 ~ median_income16_1k + prcnt_black")%>%
  layout(legend = list(orientation = 'h'))
```

The nested model (Model \ref{ypredbyx1}) and the $\hat{\gamma}_1$ direction plotted in Model \ref{ypredbyx1x2} both reflect the change in `prcnt_GOP16` as `median_income16_1k` and `prcnt_black` jointly change. The joint change is specified by the estimated coefficient $\hat{\gamma}_1$ in Model \ref{x1predbyx2}, where a one unit change in `median_income16_1k` (\$1,000) is associated with a **-0.707%** change in the percent of the county identifies as Black (`prcnt_black`).

Therefore, we can say that the estimate $\hat{\beta}_1 = 0.364$ estimated from the nested model (Model \ref{ypredbyx1}) reflects the estimated change in $y$ from  a joint one unit change in `median_income16_1k` (\$1,000) **and** a **-0.707%** change in `prcnt_black`.

```{r, results = 'asis'}
stargazer(model1, model2, model3, 
          type = "html",
          model.numbers = F,
          column.labels =  c("1","2","3"))
```

In general, a one unit change in $x_1$ *and* a $\gamma_1$ unit change in $x_2$ are associated with a $\beta_1$ change in $y$.





