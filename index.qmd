```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>", 
  warning = F,
  message = F
)
```

# Defining and Estimating the Nested Models

A model nested within another model is one where the nested model has a subset of the variables in the larger model. This article will visualize these models using a simple case where the nested model has one $x$ variable, and the full model has two $x$ variables. It will also demonstrate a method to generally recover standard errors congruent with the regression surface from the full model instead of the standard errors from the nested model.

As a preview, the nested model inside the [regression surface]{style="color: blue;"} is shown as a **black** line below. Reproducible R code is included throughout to allow the reader to verify, replicate, and modify (if desired) each step required to generate this image. 

```{r, echo = FALSE}
library(regress3d)
library(plotly)
library(stargazer)
la_counties <- subset(county_data, state_abbrv == "LA")
model1 <- lm(prcnt_GOP16 ~ median_income16_1k,  data = la_counties)
model2 <- lm(prcnt_GOP16 ~ median_income16_1k + prcnt_black, data = la_counties)
model3 <- lm(prcnt_black ~ median_income16_1k, data = la_counties)
income_seq <-  seq(min(la_counties$median_income16_1k, na.rm=TRUE),
                   max(la_counties$median_income16_1k, na.rm=TRUE),
                   length.out=10) 
income_seq <- data.frame(median_income16_1k =income_seq)
predicted_gop <- predict(object = model1, newdata = income_seq, 
                         interval = "confidence") %>%
  as.data.frame(.)
predicted_prcnt_black <- predict(object = model3, newdata = income_seq)
simulated_data_nested_model <- data.frame(median_income16_1k = income_seq,
                                          prcnt_black = predicted_prcnt_black,
                                          prcnt_GOP16 = predicted_gop$fit,
                                          lowerCI = predicted_gop$lwr,
                                          upperCI = predicted_gop$upr)
plot_ly( data = la_counties,
         x = ~median_income16_1k,
         y = ~prcnt_black,
         z = ~prcnt_GOP16) %>%
  add_markers(size = ~pop_estimate16, color = I("black"),
              name = "Louisiana counties") %>%
  add_3d_surface(model = model2)%>%
  add_direction(model = model2, direction_data = simulated_data_nested_model,
                direction_name = "Nested model: 
                prcnt_GOP16 ~ median_income16_1k, omitting prcnt_black") %>%
  layout(legend = list(orientation = 'h'))
```


## Models

We start by defining Model \ref{ypredbyx1}

\begin{align}
y =& \beta_1 x_1 + \beta_0 +\epsilon \label{ypredbyx1}
\end{align}

Model \ref{ypredbyx1} is nested within Model \ref{ypredbyx1x2} with two $x$ variables;

\begin{align}
y =& \beta'_1 x_1 +\beta'_2 x_2 + \beta'_0 +\epsilon' \label{ypredbyx1x2}
\end{align}

## Results

This article will demonstrate how to visualize the nested model inside a regression surface of Model \ref{ypredbyx1x2} using the R package __regress3d__. A few observations emerge from this exercise.

1.  @sec-viznest demonstrates how to visualize and interpret the nested model in the regression surface generated by Model \ref{ypredbyx1x2}. @sec-vizdir then shows that the estimated values $\hat{y}$ from the nested model are the same as the estimated values $\hat{y}$ from Model \ref{ypredbyx1x2} in the $\hat{\gamma}_1$ direction of Model \ref{x1predbyx2}:
\begin{align}
  \hat{x}_2 =& \hat{\gamma}_{1} x_1 + \hat{\gamma}_{0}  \label{x1predbyx2}.
\end{align}
This occurs despite the fact that Model \ref{ypredbyx1} does not use any information from $x_2$ for the estimated $\hat{y}$ values.
2.  @sec-vizdir also highlights that the estimated standard errors for $\hat{\beta}_1$ from the nested model (Model \ref{ypredbyx1}) are not identical to the estimated standard errors for the full model in the $\hat{\gamma}_1$ direction of Model \ref{ypredbyx1x2}.
3.  @sec-jointdir discusses how the estimated $\hat{\beta}_1$ in the nested model (Model \ref{ypredbyx1}) can be thought of as the results of a **joint** change in $x_1$ and $x_2$. For every unit change in $x_1$ *and* $\hat{\gamma}_{1}$ change in $x_2$, we see a $\hat{\beta}_1$ change in $y$. 
4.  @sec-stderrors shows that the estimated standard errors in the $\hat{\gamma}_1$ direction of the regression surface generated by Model \ref{ypredbyx1x2} can often be retrieved with the estimated standard error for $\beta^{''}_1$ from the residuals model
\begin{align}
y =& \beta_1^{''} x_1 +\beta_2^{''} x_{res} + \beta^{''}_0 +\epsilon^{''} \label{ypredbyx1resids}
\end{align}
where 
\begin{align*}
x_{res} = x_2 - \hat{x}_2.
\end{align*}


## R Setup

Three R packages are needed for this exercise:

-   **plotly** and **regress3d** to plot regression surfaces in 3 dimensions.
-   **stargazer** to create regression tables.

```{r, include = T}
# The package regress3d is available on github
if (!require("devtools")) {
  install.packages("devtools")
}

devtools::install_github("ellaFosterMolina/regress3d")

library(regress3d)
library(plotly)
library(stargazer)
```

## Data

The data used for this example is demographic and voting measures for all counties in the state of Louisiana in 2016 from the package __regress3d__. We could use data for all counties in the US, but limiting the analysis to Louisiana will highlight the differences in standard errors for Model \ref{ypredbyx1} and Model \ref{ypredbyx1x2}.

-   `prcnt_GOP16`:  the percent of the county that voted for Donald Trump in 2016.
-   `median_income16_1k`: median income measured in units of \$1,000 to improve the legibility of the results.
-   `prcnt_black`: the percent of the county that identified as Black.

```{r, include = F}
la_counties <- subset(county_data, state_abbrv == "LA")
```

## Estimating the Models in R

We start by estimating Model \ref{ypredbyx1} in R:

\begin{align*}
\hat{y} =& \hat{\beta}_1 x_1 + \hat{\beta}_0  \\
\hat{\text{prcnt-GOP16}} =& \hat{\beta}_1*\text{median-income16-1k} + \hat{\beta}_0.
\end{align*}

```{r}
model1 <- lm(prcnt_GOP16 ~ median_income16_1k,  data = la_counties)
```

Model \ref{ypredbyx1} is nested within Model \ref{ypredbyx1x2} with two $x$ variables:

\begin{align*}
\hat{y} =& \hat{\beta}'_1 x_1 +\hat{\beta}'_2 x_2 + \hat{\beta}'_0 \\
\hat{\text{prcnt-GOP16}} =& \hat{\beta}'_1*\text{median-income16-1k} +\hat{\beta}'_2*\text{prcnt-black} + \hat{\beta}'_0. 
\end{align*}

```{r}
model2 <- lm(prcnt_GOP16 ~ median_income16_1k + prcnt_black, data = la_counties)
```

Finally, we estimate Model \ref{x1predbyx2}. This model will define the direction Model \ref{ypredbyx1} takes in the regression surface for Model \ref{ypredbyx1x2}.

\begin{align*}
\hat{x}_2 =& \hat{\gamma}_1 x_1 + \hat{\gamma}_0 \\
\hat{\text{prcnt-black}} =& \hat{\gamma}_1*\text{median-income16-1k} + \hat{\gamma}_0.
\end{align*}

```{r}
model3 <- lm(prcnt_black ~ median_income16_1k, data = la_counties)
```

These are the estimated statistical properties of each model.

```{r, results = 'asis'}
stargazer(model1, model2, model3, 
          type = "html",
          model.numbers = F,
          column.labels =  c("1","2","3"))
```
