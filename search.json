[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Interpreting and Visualizing Nested Models in 3D",
    "section": "",
    "text": "1 Defining and Estimating the Nested Models\nA model nested within another model is one where the nested model has a subset of the variables in the larger model. This article will visualize these models using a simple case where the nested model has one \\(x\\) variable, and the full model has two \\(x\\) variables. It will also demonstrate a method to generally recover standard errors congruent with the regression surface from the full model instead of the standard errors from the nested model.\nAs a preview, the nested model inside the regression surface is shown below. Reproducible R code is included throughout to allow the reader to verify, replicate, and modify (if desired) each step required to generate this image.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Defining and Estimating the Nested Models</span>"
    ]
  },
  {
    "objectID": "index.html#models",
    "href": "index.html#models",
    "title": "Interpreting and Visualizing Nested Models in 3D",
    "section": "1.1 Models",
    "text": "1.1 Models\nWe start by defining Model \\(\\ref{ypredbyx1}\\)\n\\[\\begin{align}\ny =& \\beta_1 x_1 + \\beta_0 +\\epsilon \\label{ypredbyx1}\n\\end{align}\\]\nModel \\(\\ref{ypredbyx1}\\) is nested within Model \\(\\ref{ypredbyx1x2}\\) with two \\(x\\) variables;\n\\[\\begin{align}\ny =& \\beta'_1 x_1 +\\beta'_2 x_2 + \\beta'_0 +\\epsilon' \\label{ypredbyx1x2}\n\\end{align}\\]\nThis article will demonstrate how to visualize the nested model inside a regression surface of Model \\(\\ref{ypredbyx1x2}\\) using the R package regress3d. A few observations emerge from this exercise.\n\nSection 2.3 demonstrates how to visualize and interpret the nested model in the regression surface generated by Model \\(\\ref{ypredbyx1x2}\\). Section 2.4 then shows that the estimated values \\(\\hat{y}\\) from the nested model are the same as the estimated values \\(\\hat{y}\\) from Model \\(\\ref{ypredbyx1x2}\\) in the \\(\\hat{\\gamma}_1\\) direction of Model \\(\\ref{x1predbyx2}\\): \\[\\begin{align}\n  \\hat{x}_2 =& \\hat{\\gamma}_{1} x_1 + \\hat{\\gamma}_{0}  \\label{x1predbyx2}.\n\\end{align}\\] This occurs despite the fact that Model \\(\\ref{ypredbyx1}\\) does not use any information from \\(x_2\\) for the estimated \\(\\hat{y}\\) values.\nSection 2.4 also shows that the estimated standard errors for \\(\\hat{\\beta}_1\\) from the nested model (Model \\(\\ref{ypredbyx1}\\)) are not identical to the estimated standard errors for the full model in the \\(\\hat{\\gamma}_1\\) direction of Model \\(\\ref{ypredbyx1x2}\\).\nChapter 3 discusses how the estimated \\(\\hat{\\beta}_1\\) in the nested model (Model \\(\\ref{ypredbyx1}\\)) can be thought of as the results of a joint change in \\(x_1\\) and \\(x_2\\). For every unit change in \\(x_1\\) and \\(\\hat{\\gamma}_{1}\\) change in \\(x_2\\), we see a \\(\\hat{\\beta}_1\\) change in \\(y\\).\nChapter 4 shows that the estimated standard errors in the \\(\\hat{\\gamma}_1\\) direction of the regression surface generated by Model \\(\\ref{ypredbyx1x2}\\) can often be retrieved with the estimated standard error for \\(\\beta^{''}_1\\) from the residuals model \\[\\begin{align}\ny =& \\beta_1^{''} x_1 +\\beta_2^{''} x_{res} + \\beta^{''}_0 +\\epsilon^{''} \\label{ypredbyx1resids}\n\\end{align}\\] where \\[\\begin{align*}\nx_{res} = x_2 - \\hat{x}_2.\n\\end{align*}\\]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Defining and Estimating the Nested Models</span>"
    ]
  },
  {
    "objectID": "index.html#r-setup",
    "href": "index.html#r-setup",
    "title": "Interpreting and Visualizing Nested Models in 3D",
    "section": "1.2 R Setup",
    "text": "1.2 R Setup\nThree R packages are needed for this exercise:\n\nplotly and regress3d to plot regression surfaces in 3 dimensions.\nstargazer to create regression tables.\n\n\n# The package regress3d is available on github\nif (!require(\"devtools\")) {\n  install.packages(\"devtools\")\n}\n\n# devtools::install_github(\"ellaFosterMolina/regress3d\")\n\nlibrary(regress3d)\nlibrary(plotly)\nlibrary(stargazer)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Defining and Estimating the Nested Models</span>"
    ]
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Interpreting and Visualizing Nested Models in 3D",
    "section": "1.3 Data",
    "text": "1.3 Data\nThe data used for this example is demographic and voting measures for all counties in the state of Louisiana in 2016 from the package regress3d. We could use data for all counties in the US, but limiting the analysis to Louisiana will highlight the differences in standard errors for Model \\(\\ref{ypredbyx1}\\) and Model \\(\\ref{ypredbyx1x2}\\).\n\nprcnt_GOP16: the percent of the county that voted for Donald Trump in 2016.\nmedian_income16_1k: median income measured in units of $1,000 to improve the legibility of the results.\nprcnt_black: the percent of the county that identified as Black.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Defining and Estimating the Nested Models</span>"
    ]
  },
  {
    "objectID": "index.html#estimating-the-models-in-r",
    "href": "index.html#estimating-the-models-in-r",
    "title": "Interpreting and Visualizing Nested Models in 3D",
    "section": "1.4 Estimating the Models in R",
    "text": "1.4 Estimating the Models in R\nWe start by estimating Model \\(\\ref{ypredbyx1}\\) in R:\n\\[\\begin{align*}\n\\hat{y} =& \\hat{\\beta}_1 x_1 + \\hat{\\beta}_0  \\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}_1*\\text{median-income16-1k} + \\hat{\\beta}_0.\n\\end{align*}\\]\n\nmodel1 &lt;- lm(prcnt_GOP16 ~ median_income16_1k,  data = la_counties)\n\nModel \\(\\ref{ypredbyx1}\\) is nested within Model \\(\\ref{ypredbyx1x2}\\) with two \\(x\\) variables:\n\\[\\begin{align*}\n\\hat{y} =& \\hat{\\beta}'_1 x_1 +\\hat{\\beta}'_2 x_2 + \\hat{\\beta}'_0 \\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}'_1*\\text{median-income16-1k} +\\hat{\\beta}'_2*\\text{prcnt-black} + \\hat{\\beta}'_0.\n\\end{align*}\\]\n\nmodel2 &lt;- lm(prcnt_GOP16 ~ median_income16_1k + prcnt_black, data = la_counties)\n\nFinally, we estimate Model \\(\\ref{x1predbyx2}\\). This model will define the direction Model \\(\\ref{ypredbyx1}\\) takes in the regression surface for Model \\(\\ref{ypredbyx1x2}\\).\n\\[\\begin{align*}\n\\hat{x}_2 =& \\hat{\\gamma}_1 x_1 + \\hat{\\gamma}_0 \\\\\n\\hat{\\text{prcnt-black}} =& \\hat{\\gamma}_1*\\text{median-income16-1k} + \\hat{\\gamma}_0.\n\\end{align*}\\]\n\nmodel3 &lt;- lm(prcnt_black ~ median_income16_1k, data = la_counties)\n\nThese are the estimated statistical properties of each model.\nstargazer(model1, model2, model3, \n          type = \"html\",\n          model.numbers = F,\n          column.labels =  c(\"1\",\"2\",\"3\"))\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_GOP16\n\n\nprcnt_black\n\n\n\n\n\n\n1\n\n\n2\n\n\n3\n\n\n\n\n\n\n\n\nmedian_income16_1k\n\n\n0.364**\n\n\n-0.336***\n\n\n-0.707***\n\n\n\n\n\n\n(0.181)\n\n\n(0.076)\n\n\n(0.170)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_black\n\n\n\n\n-0.991***\n\n\n\n\n\n\n\n\n\n\n(0.050)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n47.929***\n\n\n109.201***\n\n\n61.826***\n\n\n\n\n\n\n(7.915)\n\n\n(4.288)\n\n\n(7.423)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n64\n\n\n64\n\n\n64\n\n\n\n\nR2\n\n\n0.061\n\n\n0.872\n\n\n0.218\n\n\n\n\nAdjusted R2\n\n\n0.046\n\n\n0.868\n\n\n0.205\n\n\n\n\nResidual Std. Error\n\n\n13.800 (df = 62)\n\n\n5.136 (df = 61)\n\n\n12.942 (df = 62)\n\n\n\n\nF Statistic\n\n\n4.041** (df = 1; 62)\n\n\n207.882*** (df = 2; 61)\n\n\n17.295*** (df = 1; 62)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Defining and Estimating the Nested Models</span>"
    ]
  },
  {
    "objectID": "visualize_models_3d.html",
    "href": "visualize_models_3d.html",
    "title": "2  Visualizing the Nested Model Inside the Full Model",
    "section": "",
    "text": "2.1 Visualizing Model 1: The nested model with one x variable\nAuthor’s note: The following demonstrates the numeric equivalency of \\(\\hat{\\beta}_1\\) from Model \\(\\ref{ypredbyx1}\\) with the slope in the direction of \\(\\hat{\\gamma}\\) in the full model (Model \\(\\ref{ypredbyx1x2}\\)) for one example. A pdf with the proof that this holds for all linear nested models of this type (one  \\(x\\) variable in the nested model, two  \\(x\\) variables in the full model) can be found at my github repository for this document.\nFor reference, the equation for the estimated values of the nested model (Model \\(\\ref{ypredbyx1}\\)) is:\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}_1 x_1 + \\hat{\\beta}_0. \\label{ypredbyx1}\n\\end{align}\\]\nThe standard way to visualize Model \\(\\ref{ypredbyx1}\\) is in 2 dimensions using a scatterplot with a regression line.\nla_counties %&gt;%\n  ggplot(aes(x = median_income16_1k, y = prcnt_GOP16)) +\n  geom_point()+\n  geom_smooth(method = lm)+\n  theme_classic()+\n  labs(y = \"% of County that Voted for Trump in 2016\",\n       x = \"County median income\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing the Nested Model Inside the Full Model</span>"
    ]
  },
  {
    "objectID": "visualize_models_3d.html#visualizing-model-2-the-model-with-two-x-variables",
    "href": "visualize_models_3d.html#visualizing-model-2-the-model-with-two-x-variables",
    "title": "2  Visualizing the Nested Model Inside the Full Model",
    "section": "2.2 Visualizing Model 2: The model with two x variables",
    "text": "2.2 Visualizing Model 2: The model with two x variables\nThe equation for the estimated values of the full model (Model \\(\\ref{ypredbyx1x2}\\)) is:\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}'_1 x_1 +\\hat{\\beta}'_2 x_2 + \\hat{\\beta}'_0. \\label{ypredbyx1x2}\n\\end{align}\\]\nBefore we see the nested model (Model \\(\\ref{ypredbyx1}\\)) in 3D, we can examine the regression surface for Model \\(\\ref{ypredbyx1x2}\\) visualized in 3D. The marginal effects of median_income16_1k and prcnt_black are depicted for reference.\nA more thorough explanation of the code used to create the regression surface and marginal effects, as well as more instructions on how to interact with the 3D graphic can be found here.\n\nplot_ly( data = la_counties,\n         x = ~median_income16_1k,\n         y = ~prcnt_black,\n         z = ~prcnt_GOP16) %&gt;%\n  add_markers(size = ~pop_estimate16, color = I(\"black\"),\n              name =\"Louisiana county\") %&gt;%\n  add_3d_surface(model = model2)%&gt;%\n  add_marginals(model = model2, \n                x1_direction_name =\"Marginal effect of income\",\n                x2_direction_name =\"Marginal effect of % Black\")\n\n\n\n\n\nClick-hold-drag the image above to rotate it and see the regression surface from different perspectives.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing the Nested Model Inside the Full Model</span>"
    ]
  },
  {
    "objectID": "visualize_models_3d.html#sec-viznest",
    "href": "visualize_models_3d.html#sec-viznest",
    "title": "2  Visualizing the Nested Model Inside the Full Model",
    "section": "2.3 Visualizing Model 1 Nested Inside Model 2",
    "text": "2.3 Visualizing Model 1 Nested Inside Model 2\nThe nested model can be shown within the regression surface generated by Model \\(\\ref{ypredbyx1x2}\\). This section will demonstrate how to do this. Section 2.4 will then demonstrate that the predicted \\(y\\) values in the nested model (Model \\(\\ref{ypredbyx1}\\)) are indeed identical to the predicted values in the regression surface (Model \\(\\ref{ypredbyx1x2}\\)) in the direction defined by _{1} from Model \\(\\ref{x1predbyx2}\\):\n\\[\\begin{align}\n  \\hat{x}_2 =& \\hat{\\gamma}_{1} x_1 + \\hat{\\gamma}_{0}. \\label{x1predbyx2}\n\\end{align}\\]\n\nCreate predicted values data\nIn order to visualize Model 1 nested inside the regression surface of Model 2, we will create a dataset of generated and predicted values. This will be used to plot the estimated values of prcnt_GOP16 in the 3D graphic.\n\nincome_seq is a sequence of values from the lowest value for median_income16_1k to the highest.\n\n\nincome_seq &lt;-  seq(min(la_counties$median_income16_1k, na.rm=TRUE),\n                   max(la_counties$median_income16_1k, na.rm=TRUE),\n                   length.out=10) \nincome_seq &lt;- data.frame(median_income16_1k =income_seq)\n\n\npredicted_gop is a dataframe that contains predicted values for prcnt_GOP16 based on Model \\(\\ref{ypredbyx1}\\) and the values in income_seq. Note that there is no explicit information about prcnt_black in the prediction.\n\n\npredicted_gop also contains the lower and upper 95% confidence intervals for the predicted values.\n\n\npredicted_gop &lt;- predict(object = model1, newdata = income_seq, \n                         interval = \"confidence\") %&gt;%\n  as.data.frame(.)\n\n\npredicted_prcnt_black is a sequence of predicted values for prcnt_black based on Model \\(\\ref{x1predbyx2}\\) and the values in income_seq. This sequence of values is exclusively used to plot the estimated values for prcnt_GOP16 in the \\(\\hat{\\gamma}_{1}\\) direction of the regression surface.\n\n\npredicted_prcnt_black &lt;- predict(object = model3, newdata = income_seq)\n\nWe then turn these values into a dataframe that regress_3d can use to create lines in 3D.\n\nsimulated_data_nested_model &lt;- data.frame(median_income16_1k = income_seq,\n                                          prcnt_black = predicted_prcnt_black,\n                                          prcnt_GOP16 = predicted_gop$fit,\n                                          lowerCI = predicted_gop$lwr,\n                                          upperCI = predicted_gop$upr)\n\n\n\nCreate 3D visual\nThe nested model is shown in black in the regression surface generated by Model \\(\\ref{ypredbyx1x2}\\).\n\nplot_ly( data = la_counties,\n         x = ~median_income16_1k,\n         y = ~prcnt_black,\n         z = ~prcnt_GOP16) %&gt;%\n  add_markers(size = ~pop_estimate16, color = I(\"black\"),\n              name = \"Louisiana counties\") %&gt;%\n  add_3d_surface(model = model2)%&gt;%\n  add_direction(model = model2, direction_data = simulated_data_nested_model,\n                direction_name = \"Nested model: \n                prcnt_GOP16 ~ median_income16_1k, omitting prcnt_black\")%&gt;%\n  layout(legend = list(orientation = 'h'))\n\n\n\n\n# the function add_direction() calls model2.  \n# The model is exclusively used to ensure that the variable names\n# in direction_data are the same as in the full model (Model 2), \n# and therefore plottable in the same coordinate system as the regression surface. \n# Model 2 is not used to estimate any values.\n# The function will be edited in the future to ensure there is no confusion.\n\n\n\nTakeaways\n\nThe line of predicted values for prcnt_GOP16 appear to lie exactly on the blue regression plane generated by Model \\(\\ref{ypredbyx1x2}\\). This occurs despite the fact that education was not used to generate the estimates for the predicted values of prcnt_GOP16.\nThe confidence intervals for prcnt_GOP16 lie outside the confidence intervals for the regression plane generated by Model \\(\\ref{ypredbyx1x2}\\).\n\nSection 2.4 below will demonstrate that the predicted values of prcnt_GOP16 are precisely on the regression plane generated by Model \\(\\ref{ypredbyx1x2}\\). We will generate the predicted values for prcnt_GOP16 from Model \\(\\ref{ypredbyx1x2}\\) using the paired values (\\(x_1\\), \\(x_2\\)) = (median_income16_1k, prcnt_black), where the value for \\(x_2\\) is predicted by Model \\(\\ref{x1predbyx2}\\), prcnt_black ~ median_income16_1k.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing the Nested Model Inside the Full Model</span>"
    ]
  },
  {
    "objectID": "visualize_models_3d.html#sec-vizdir",
    "href": "visualize_models_3d.html#sec-vizdir",
    "title": "2  Visualizing the Nested Model Inside the Full Model",
    "section": "2.4 Visualizing A Direction in Model 1 with the Same Predicted Values as the Nested Model",
    "text": "2.4 Visualizing A Direction in Model 1 with the Same Predicted Values as the Nested Model\nSection 2.3 predicted values for prcnt_GOP16 using Model \\(\\ref{ypredbyx1}\\), a model that includes median_income_1k but has no information about prcnt_black. This section will predict values for prcnt_GOP16 using Model \\(\\ref{ypredbyx1x2}\\), a model that includes both median_income_1k and prcnt_black.\n\nCreate predicted values data\n\nincome_seq: As in Section 2.3, this is a sequence of values from the lowest value for median_income16_1k to the highest.\npredicted_prcnt_black: As in Section 2.3, this is a sequence of predicted values for prcnt_black based on Model \\(\\ref{x1predbyx2}\\) and the values in income_seq. We bind these values into a dataframe to be used to generate predicted_rshift. Unlike Section 2.3, these values will be used to predict the values for \\(y\\) (prcnt_GOP16) using Model \\(\\ref{ypredbyx1x2}\\).\n\n\nincome_edu_data &lt;- data.frame(median_income16_1k = income_seq,\n                              prcnt_black = predicted_prcnt_black)\n\n\npredicted_gop: is a dataframe that contains predicted values for prcnt_GOP16 based on Model \\(\\ref{ypredbyx1x2}\\) and the values in income_edu_data. It also contains the lower and upper 95% confidence intervals for the predicted values.\n\n\npredicted_gop &lt;- predict(object = model2, newdata = income_edu_data, interval = \"confidence\") %&gt;%\n  as.data.frame(.)\n\nWe then turn these values into a dataframe that regress_3d can use to create lines in 3D.\n\nsimulated_data_model2 &lt;- data.frame(median_income16_1k = income_seq,\n                                    prcnt_black = predicted_prcnt_black,\n                                    prcnt_GOP16 = predicted_gop$fit,\n                                    lowerCI = predicted_gop$lwr,\n                                    upperCI = predicted_gop$upr)\n\n\n\nCreate 3D visual\nThe nested model from Section 2.3 is shown with the black line in the regression surface generated by Model \\(\\ref{ypredbyx1x2}\\). The green line shows the estimated values of prcnt_GOP16 in the \\(\\gamma_1\\) direction of the regression surface generated by Model \\(\\ref{ypredbyx1x2}\\).\n\nplot_ly( data = la_counties,\n         x = ~median_income16_1k,\n         y = ~prcnt_black,\n         z = ~prcnt_GOP16) %&gt;%\n  add_markers(size = ~pop_estimate16, color = I(\"black\"),\n              name = \"Louisiana counties\") %&gt;%\n  add_direction(model = model2, direction_data = simulated_data_nested_model,\n                direction_name = \"Nested model: \n                prcnt_GOP16 ~ median_income16_1k, omitting prcnt_black\") %&gt;%\n  add_direction(model = model2, direction_data = simulated_data_model2,\n                linecolor = \"green\",\n                direction_name = \"The &#947;&#x0302; direction in Model 2:\n                prcnt_GOP16 ~ median_income16_1k + prcnt_black\")%&gt;%\n  layout(legend = list(orientation = 'h'))\n\n\n\n\n# the function add_direction() calls model2.  \n# The model is exclusively used to ensure that the variable names\n# in direction_data are the same as in the full model (Model 2), \n# and therefore plottable in the same coordinate system as the regression surface. \n# Model 2 is not used to estimate any values.\n# The function will be edited in the future to ensure there is no confusion.\n\n\n\nTakeaways\n\nThese two lines look identical:\n\nThe green line of estimated values for prcnt_GOP16 based on Model \\(\\ref{ypredbyx1x2}\\) in the \\(\\gamma_1\\) direction estimated from Model \\(\\ref{x1predbyx2}\\): prcnt_black ~ median_income16_1k\nThe black line of values for prcnt_GOP16 estimated from Model \\(\\ref{ypredbyx1}\\) which does not have any information about prcnt_black.\n\n\nThe table below shows that they are identical to a numeric error. Specifically, they are identical within 13 significant digits, which is within the precision that R can estimate values.\n\ndiff_model1_model2 &lt;- simulated_data_nested_model$prcnt_GOP16 - simulated_data_model2$prcnt_GOP16\ndata.frame(model1_rshift =  simulated_data_nested_model$prcnt_GOP16,\n           model2_rshift =  simulated_data_model2$prcnt_GOP16, \n           diff = round(diff_model1_model2, digits = 13) )\n#&gt;    model1_rshift model2_rshift diff\n#&gt; 1       57.33353      57.33353    0\n#&gt; 2       59.29305      59.29305    0\n#&gt; 3       61.25256      61.25256    0\n#&gt; 4       63.21208      63.21208    0\n#&gt; 5       65.17160      65.17160    0\n#&gt; 6       67.13111      67.13111    0\n#&gt; 7       69.09063      69.09063    0\n#&gt; 8       71.05015      71.05015    0\n#&gt; 9       73.00966      73.00966    0\n#&gt; 10      74.96918      74.96918    0\n\nThe models in the full regression surface are plotted below.\n\nplot_ly( data = la_counties,\n         x = ~median_income16_1k,\n         y = ~prcnt_black,\n         z = ~prcnt_GOP16) %&gt;%\n  add_markers(size = ~pop_estimate16, color = I(\"black\"),\n              name = \"Louisiana counties\") %&gt;%\n  add_3d_surface(model = model2)%&gt;%\n  add_direction(model = model2, direction_data = simulated_data_nested_model,\n                direction_name = \"Nested model: \n                prcnt_GOP16 ~ median_income16_1k, omitting prcnt_black\") %&gt;%\n  add_direction(model = model2, direction_data = simulated_data_model2,\n                linecolor = \"green\",\n                direction_name = \"The &#947;&#x0302 direction in Model 2:\n                prcnt_GOP16 ~ median_income16_1k + prcnt_black\")%&gt;%\n  layout(legend = list(orientation = 'h'))\n\n\n\n\n# the function add_direction() calls model2.  \n# The model is exclusively used to ensure that the variable names\n# in direction_data are the same as in the full model (Model 2), \n# and therefore plottable in the same coordinate system as the regression surface. \n# Model 2 is not used to estimate any values.\n# The function will be edited in the future to ensure there is no confusion.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing the Nested Model Inside the Full Model</span>"
    ]
  },
  {
    "objectID": "joint_change.html",
    "href": "joint_change.html",
    "title": "3  Interpreting Joint Changes in \\(x_1\\) and \\(x_2\\)",
    "section": "",
    "text": "For reference, the equation for the estimated values of the nested model (Model \\(\\ref{ypredbyx1}\\)) is:\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}_1 x_1 + \\hat{\\beta}_0. \\label{ypredbyx1} \\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}_1*\\text{median-income16-1k} + \\hat{\\beta}_0. \\nonumber\n\\end{align}\\]\nThe equation for the estimated values of the full model (Model \\(\\ref{ypredbyx1x2}\\)) is:\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}'_1 x_1 +\\hat{\\beta}'_2 x_2 + \\hat{\\beta}'_0 \\label{ypredbyx1x2} \\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}'_1*\\text{median-income16-1k} +\\hat{\\beta}'_2*\\text{prcnt-black} + \\hat{\\beta}'_0. \\nonumber\n\\end{align}\\]\nThe estimated values for the model that defines the direction of the change in \\(y\\) in the nested model are generated from Model \\(\\ref{x1predbyx2}\\):\n\\[\\begin{align}\n\\hat{x}_2 =& \\hat{\\gamma}_1 x_1 + \\hat{\\gamma}_0 \\label{x1predbyx2} \\\\\n\\hat{\\text{prcnt-black}} =& \\hat{\\gamma}_1*\\text{median-income16-1k} + \\hat{\\gamma}_0. \\nonumber\n\\end{align}\\]\nThe nested model and the \\(\\hat{\\gamma}_1\\) direction in the full model (Model \\(\\ref{ypredbyx1x2}\\) are shown below in the regression surface generated by the full model.\n\nplot_ly( data = la_counties,\n         x = ~median_income16_1k,\n         y = ~prcnt_black,\n         z = ~prcnt_GOP16) %&gt;%\n  add_markers(size = ~pop_estimate16, color = I(\"black\"),\n              name = \"Louisiana counties\") %&gt;%\n  add_3d_surface(model = model2)%&gt;%\n  add_direction(model = model2, direction_data = simulated_data_nested_model,\n                direction_name = \"Nested model:\n                prcnt_GOP16 ~ median_income16_1k, omitting prcnt_black\") %&gt;%\n  add_direction(model = model2, direction_data = simulated_data_model2,\n                linecolor = \"limegreen\",\n                direction_name = \"The &#947;&#x0302; direction in Model 2:\n                prcnt_GOP16 ~ median_income16_1k + prcnt_black\")%&gt;%\n  layout(legend = list(orientation = 'h'))\n\n\n\n\n\nThe nested model (Model \\(\\ref{ypredbyx1}\\)) and the \\(\\hat{\\gamma}_1\\) direction plotted in Model \\(\\ref{ypredbyx1x2}\\) both reflect the change in prcnt_GOP16 as median_income16_1k and prcnt_black jointly change. The joint change is specified by the estimated coefficient \\(\\hat{\\gamma}_1\\) in Model \\(\\ref{x1predbyx2}\\), where a one unit change in median_income16_1k ($1,000) is associated with a -0.707% change in the percent of the county identifies as Black (prcnt_black).\nTherefore, we can say that the estimate \\(\\hat{\\beta}_1 = 0.364\\) estimated from the nested model (Model \\(\\ref{ypredbyx1}\\)) reflects the estimated change in \\(y\\) from a joint one unit change in median_income16_1k ($1,000) and a -0.707% change in prcnt_black.\nstargazer(model1, model2, model3, \n          type = \"html\",\n          model.numbers = F,\n          column.labels =  c(\"1\",\"2\",\"3\"))\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_GOP16\n\n\nprcnt_black\n\n\n\n\n\n\n1\n\n\n2\n\n\n3\n\n\n\n\n\n\n\n\nmedian_income16_1k\n\n\n0.364**\n\n\n-0.336***\n\n\n-0.707***\n\n\n\n\n\n\n(0.181)\n\n\n(0.076)\n\n\n(0.170)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_black\n\n\n\n\n-0.991***\n\n\n\n\n\n\n\n\n\n\n(0.050)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n47.929***\n\n\n109.201***\n\n\n61.826***\n\n\n\n\n\n\n(7.915)\n\n\n(4.288)\n\n\n(7.423)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n64\n\n\n64\n\n\n64\n\n\n\n\nR2\n\n\n0.061\n\n\n0.872\n\n\n0.218\n\n\n\n\nAdjusted R2\n\n\n0.046\n\n\n0.868\n\n\n0.205\n\n\n\n\nResidual Std. Error\n\n\n13.800 (df = 62)\n\n\n5.136 (df = 61)\n\n\n12.942 (df = 62)\n\n\n\n\nF Statistic\n\n\n4.041** (df = 1; 62)\n\n\n207.882*** (df = 2; 61)\n\n\n17.295*** (df = 1; 62)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\nIn general, a one unit change in \\(x_1\\) and a \\(\\hat{\\gamma}_1\\) unit change in \\(x_2\\) are associated with a \\(\\hat{\\beta}_1\\) change in \\(y\\).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Interpreting Joint Changes in $x_1$ and $x_2$</span>"
    ]
  },
  {
    "objectID": "standard_error_in_gamma_direction.html",
    "href": "standard_error_in_gamma_direction.html",
    "title": "4  An Approach for Extracting Standard Errors in the \\(\\hat{\\gamma}_1\\) Direction",
    "section": "",
    "text": "4.1 Estimating the Residuals model\nIt is not standard practice to estimate standard errors in the \\(\\hat{\\gamma}_1\\) direction of Model \\(\\ref{ypredbyx1x2}\\). However, they can be recovered. This section demonstrates one possible way to recover them using the residuals model. See authors note for more details.\nFor reference, the equation for the estimated values of the nested model (Model \\(\\ref{ypredbyx1}\\)) is:\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}_1 x_1 + \\hat{\\beta}_0. \\label{ypredbyx1} \\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}_1*\\text{median-income16-1k} + \\hat{\\beta}_0. \\nonumber\n\\end{align}\\]\nThe equation for the estimated values of the full model (Model \\(\\ref{ypredbyx1x2}\\)) is:\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}'_1 x_1 +\\hat{\\beta}'_2 x_2 + \\hat{\\beta}'_0 \\label{ypredbyx1x2} \\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}'_1*\\text{median-income16-1k} +\\hat{\\beta}'_2*\\text{prcnt-black} + \\hat{\\beta}'_0. \\nonumber\n\\end{align}\\]\nThe estimated values for the model that defines the direction of the change in \\(y\\) in the nested model are generated from Model \\(\\ref{x1predbyx2}\\):\n\\[\\begin{align}\n\\hat{x}_2 =& \\hat{\\gamma}_1 x_1 + \\hat{\\gamma}_0 \\label{x1predbyx2} \\\\\n\\hat{\\text{prcnt-black}} =& \\hat{\\gamma}_1*\\text{median-income16-1k} + \\hat{\\gamma}_0. \\nonumber\n\\end{align}\\]\nAuthor’s note: I have a general proof of the numerical findings in the previous section: the estimate of \\(\\hat{\\beta}_1\\) in the nested linear model is the same as the change in \\(\\hat{y}\\) in the \\(\\hat{\\gamma}_1\\) direction specified by Model \\(\\ref{x1predbyx2}\\) in the regression surface in the full linear model. I do not have a general proof that the standard error for \\(\\hat{\\beta}^{'''}_1\\) in the residuals model (defined below) is the same as the standard error in the regression surface in the direction specified by Model \\(\\ref{x1predbyx2}\\). However, I do have a proof (available upon request) for a method that simultaneously retrieves both the estimate of \\(\\hat{\\beta}_1\\) and the standard error from Model \\(\\ref{ypredbyx1x2}\\). The standard errors for this method have agreed with the standard errors in the residuals model across hundreds of different regressions. However, I cannot currently guarantee that the residuals model will always produce the standard errors in the \\(\\hat{\\gamma}_1\\) direction specified by Model \\(\\ref{x1predbyx2}\\) in the full linear model.\nIn this case, the standard error on median_income16_1k can be recovered by estimating prcnt_GOP16 using both median_income16_1k and the residuals of prcnt_black from Model \\(\\ref{x1predbyx2}\\). This finding holds for all models I have tried it on. See the author’s note above for more details.\nThe residuals model uses the residuals in Model \\(\\ref{x1predbyx2}\\) to replace \\(x_2\\) in the full model (Model \\(\\ref{ypredbyx1x2}\\)). To estimate this model, we start by adding a column of residual values from Model \\(\\ref{x1predbyx2}\\) to la_counties.\nla_counties$resid_black_predby_income &lt;- residuals(model3)\nThen we estimate Model \\(\\ref{ypredbyx1resids}\\)\n\\[\\begin{align}\n\\hat{y} =& \\hat{\\beta}_1^{''} x_1 +\\hat{\\beta}_2^{''} x^{''}_2 + \\hat{\\beta}^{''}_0 \\label{ypredbyx1resids}\\\\\n\\hat{\\text{prcnt-GOP16}} =& \\hat{\\beta}^{''}_1*\\text{median-income16} + \\\\ &\\hat{\\beta}^{''}_2*\\text{resid-black-predby-income}+\\hat{\\beta}^{''}_0 \\nonumber\n\\end{align}\\]\nmodel_blackresids &lt;- lm(prcnt_GOP16~median_income16_1k+resid_black_predby_income, \n                        data = la_counties)\nFinally, we compare the results from three models:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>An Approach for Extracting Standard Errors in the $\\hat{\\gamma}_1$ Direction</span>"
    ]
  },
  {
    "objectID": "standard_error_in_gamma_direction.html#estimating-the-residuals-model",
    "href": "standard_error_in_gamma_direction.html#estimating-the-residuals-model",
    "title": "4  An Approach for Extracting Standard Errors in the \\(\\hat{\\gamma}_1\\) Direction",
    "section": "",
    "text": "Model \\(\\ref{ypredbyx1}\\): prcnt_GOP16 ~ median_income16_1k\nModel \\(\\ref{ypredbyx1x2}\\): prcnt_GOP16 ~ median_income16_1k + prcnt_black\nModel \\(\\ref{ypredbyx1resids}\\): prcnt_GOP16 ~ median_income16_1k + resid_black_predby_income\n\nstargazer(model1, model2, model_blackresids, \n          type = \"html\",\n          model.numbers = F,\n          column.labels =  c(\"1\",\"2\",\"4\"))\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_GOP16\n\n\n\n\n\n\n1\n\n\n2\n\n\n4\n\n\n\n\n\n\n\n\nmedian_income16_1k\n\n\n0.364**\n\n\n-0.336***\n\n\n0.364***\n\n\n\n\n\n\n(0.181)\n\n\n(0.076)\n\n\n(0.067)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_black\n\n\n\n\n-0.991***\n\n\n\n\n\n\n\n\n\n\n(0.050)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nresid_black_predby_income\n\n\n\n\n\n\n-0.991***\n\n\n\n\n\n\n\n\n\n\n(0.050)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n47.929***\n\n\n109.201***\n\n\n47.929***\n\n\n\n\n\n\n(7.915)\n\n\n(4.288)\n\n\n(2.946)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n64\n\n\n64\n\n\n64\n\n\n\n\nR2\n\n\n0.061\n\n\n0.872\n\n\n0.872\n\n\n\n\nAdjusted R2\n\n\n0.046\n\n\n0.868\n\n\n0.868\n\n\n\n\nResidual Std. Error\n\n\n13.800 (df = 62)\n\n\n5.136 (df = 61)\n\n\n5.136 (df = 61)\n\n\n\n\nF Statistic\n\n\n4.041** (df = 1; 62)\n\n\n207.882*** (df = 2; 61)\n\n\n207.882*** (df = 2; 61)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>An Approach for Extracting Standard Errors in the $\\hat{\\gamma}_1$ Direction</span>"
    ]
  },
  {
    "objectID": "standard_error_in_gamma_direction.html#create-predicted-values-data-from-residuals-model",
    "href": "standard_error_in_gamma_direction.html#create-predicted-values-data-from-residuals-model",
    "title": "4  An Approach for Extracting Standard Errors in the \\(\\hat{\\gamma}_1\\) Direction",
    "section": "4.2 Create predicted values data from residuals model",
    "text": "4.2 Create predicted values data from residuals model\nRecall that in Section 2.3 and ?sec-visdir we generated a dataset of predicted values for prcnt_GOP16 in the regression surface of Model \\(\\ref{ypredbyx1x2}\\) along the line of best fit for Model \\(\\ref{x1predbyx2}\\). We do the same process, with a few tweaks, to generate the predicted values and standard errors for prcnt_GOP16 from Model \\(\\ref{ypredbyx1resids}\\). This allows us to check the predicted values from the two models against each other. The steps to generate this dataset are shown below.\n\nmodel_blackresids_shifted: The regression surface of the residuals model will be centered at \\((x_1, x_2)\\) = (mean(median_income_1k), 0) because the residuals resid_black_predby_income are centered at 0. In order to recover the appropriate estimates and standard errors for prcnt_GOP16 we can translate the regression surface so that it is centered at (mean(median_income_1k), mean(prcnt_black)). This is done by adding the mean of prcnt_black back to the residuals resid_black_predby_income and reestimating the residuals model in model_blackresids_shifted. We can compare the model_blackresids_shifted and model_blackresids to verify that they produce the same marginal effects with a different constant value.\n\nla_counties$resid_black_predby_income_shifted &lt;- la_counties$resid_black_predby_income +\n  mean(la_counties$prcnt_black,na.rm=T)\n\nmodel_blackresids_shifted &lt;- lm(prcnt_GOP16 ~ median_income16_1k+resid_black_predby_income_shifted, \n                        data = la_counties)\nstargazer(model_blackresids, model_blackresids_shifted, \n          type = \"html\",\n          model.numbers = F)\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nprcnt_GOP16\n\n\n\n\n\n\n\n\nmedian_income16_1k\n\n\n0.364***\n\n\n0.364***\n\n\n\n\n\n\n(0.067)\n\n\n(0.067)\n\n\n\n\n\n\n\n\n\n\n\n\nresid_black_predby_income\n\n\n-0.991***\n\n\n\n\n\n\n\n\n(0.050)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nresid_black_predby_income_shifted\n\n\n\n\n-0.991***\n\n\n\n\n\n\n\n\n(0.050)\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n47.929***\n\n\n79.345***\n\n\n\n\n\n\n(2.946)\n\n\n(3.351)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n64\n\n\n64\n\n\n\n\nR2\n\n\n0.872\n\n\n0.872\n\n\n\n\nAdjusted R2\n\n\n0.868\n\n\n0.868\n\n\n\n\nResidual Std. Error (df = 61)\n\n\n5.136\n\n\n5.136\n\n\n\n\nF Statistic (df = 2; 61)\n\n\n207.882***\n\n\n207.882***\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n\nincome_seq: As in the prior section, these are regularly spaced values from the minimum to maximum values of median_income16_1k.\nprcntblack_seq: The sequence of values for resid_black_predby_income_shifted are the repeated mean values of prcnt_black. This ensures that we retrieve the predicted values for \\(y\\) for the reported marginal effect of median_income16_1k, which holds \\(x_2\\) = resid_black_predby_income_shifted constant.\n\n\nprcntblack_seq &lt;-  rep(mean(la_counties$prcnt_black, na.rm=TRUE), 10)\nincome_edu_data &lt;- data.frame(median_income16_1k = income_seq,\n                              resid_black_predby_income_shifted = prcntblack_seq)\n\n\nWe predict the values and 95% confidence intervals for prcnt_GOP16 for the each pair of values for median_income16_1k and prcntblack_seq using the residuals model model_blackresids_shifted.\n\n\npredicted_gop_resid_model &lt;- predict(object = model_blackresids_shifted, \n                                     newdata = income_edu_data, interval = \"confidence\") %&gt;%\n  as.data.frame(.)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>An Approach for Extracting Standard Errors in the $\\hat{\\gamma}_1$ Direction</span>"
    ]
  },
  {
    "objectID": "standard_error_in_gamma_direction.html#comparing-predicted-values-from-the-residuals-model-and-the-gamma_1-direction-in-the-full-model",
    "href": "standard_error_in_gamma_direction.html#comparing-predicted-values-from-the-residuals-model-and-the-gamma_1-direction-in-the-full-model",
    "title": "4  An Approach for Extracting Standard Errors in the \\(\\hat{\\gamma}_1\\) Direction",
    "section": "4.3 Comparing predicted values from the residuals model and the \\(\\gamma_1\\) direction in the full model",
    "text": "4.3 Comparing predicted values from the residuals model and the \\(\\gamma_1\\) direction in the full model\nFinally, we compare the predicted values and confidence intervals for prcnt_GOP16 from the full model (Model \\(\\ref{ypredbyx1x2}\\)) and the residuals model (Model \\(\\ref{ypredbyx1resids}\\)). The calculations are not shown here, but they are the same to within 14 significant digits, which is within the precision with which R estimates values.\n\ncbind(predicted_gop_resid_model, simulated_data_model2[,c(\"prcnt_GOP16\", \"lowerCI\",\"upperCI\")] )\n#&gt;         fit      lwr      upr prcnt_GOP16  lowerCI  upperCI\n#&gt; 1  57.33353 54.72769 59.93937    57.33353 54.72769 59.93937\n#&gt; 2  59.29305 57.28639 61.29971    59.29305 57.28639 61.29971\n#&gt; 3  61.25256 59.73091 62.77421    61.25256 59.73091 62.77421\n#&gt; 4  63.21208 61.92500 64.49916    63.21208 61.92500 64.49916\n#&gt; 5  65.17160 63.73975 66.60344    65.17160 63.73975 66.60344\n#&gt; 6  67.13111 65.26130 69.00093    67.13111 65.26130 69.00093\n#&gt; 7  69.09063 66.64223 71.53903    69.09063 66.64223 71.53903\n#&gt; 8  71.05015 67.96055 74.13974    71.05015 67.96055 74.13974\n#&gt; 9  73.00966 69.24816 76.77117    73.00966 69.24816 76.77117\n#&gt; 10 74.96918 70.51893 79.41943    74.96918 70.51893 79.41943",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>An Approach for Extracting Standard Errors in the $\\hat{\\gamma}_1$ Direction</span>"
    ]
  },
  {
    "objectID": "standard_error_in_gamma_direction.html#visualizing-the-standard-errors-for-beta_1-from-the-residuals-model-in-model-2",
    "href": "standard_error_in_gamma_direction.html#visualizing-the-standard-errors-for-beta_1-from-the-residuals-model-in-model-2",
    "title": "4  An Approach for Extracting Standard Errors in the \\(\\hat{\\gamma}_1\\) Direction",
    "section": "4.4 Visualizing the Standard Errors for \\(\\beta^{'''}_1\\) from the Residuals Model in Model 2",
    "text": "4.4 Visualizing the Standard Errors for \\(\\beta^{'''}_1\\) from the Residuals Model in Model 2\nTo visualize these estimated values, we create a dataset that regress3d can use to plot the estimated values and confidence intervals for prcnt_GOP16 based on model_blackresids_shifted.\n\nsimulated_data_modelresids &lt;- data.frame(median_income16_1k = income_seq,\n                                    prcnt_black = predicted_prcnt_black,\n                                    prcnt_GOP16 = predicted_gop$fit,\n                                    lowerCI = predicted_gop$lwr,\n                                    upperCI = predicted_gop$upr)\n\nThen we plot estimates for the \\(\\hat{\\gamma}_1\\) direction in Model \\(\\ref{ypredbyx1x2}\\) in green and the estimates for the residuals model (Model \\(\\ref{ypredbyx1resids}\\) in yellow.\nAs expected, the yellow line fits precisely into the regression surface in the direction of \\(\\gamma_1\\). The green is hidden below the yellow because they are identical. To reveal the green line, click the legend for the yellow line to hide it.\n\nplot_ly( data = la_counties,\n         x = ~median_income16_1k,\n         y = ~prcnt_black,\n         z = ~prcnt_GOP16) %&gt;%\n  add_markers(size = ~pop_estimate16, color = I(\"black\"),\n              name = \"Louisiana counties\") %&gt;%\n  add_3d_surface(model = model2)%&gt;%\n  add_direction(model = model2, direction_data = simulated_data_model2,\n                linecolor = \"limegreen\",\n                direction_name = \"The &#947; direction in Model 2:\n                prcnt_GOP16 ~ median_income16_1k + prcnt_black\") %&gt;%\n  add_direction(model = model2, direction_data = simulated_data_modelresids,\n                linecolor = \"yellow\",\n                direction_name = \"Predicted values from residuals model:\n                prcnt_GOP16 ~ median_income16_1k + resid_black_predby_income_shifted\") %&gt;%\n  layout(legend = list(orientation = 'h'))",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>An Approach for Extracting Standard Errors in the $\\hat{\\gamma}_1$ Direction</span>"
    ]
  },
  {
    "objectID": "standard_error_in_gamma_direction.html#takeaways",
    "href": "standard_error_in_gamma_direction.html#takeaways",
    "title": "4  An Approach for Extracting Standard Errors in the \\(\\hat{\\gamma}_1\\) Direction",
    "section": "4.5 Takeaways",
    "text": "4.5 Takeaways\n\nThe estimated coefficient for median_income16_1k in Models \\(\\ref{ypredbyx1}\\) (\\(\\hat{\\beta}_1\\)) and \\(\\ref{ypredbyx1resids}\\) (\\(\\hat{\\beta}^{''}_1\\)) are identical.\nThe estimated standard errors in Models \\(\\ref{ypredbyx1}\\) and \\(\\ref{ypredbyx1resids}\\) are different.\nIn this case and many others, the estimated standard error of the full model (Model \\(\\ref{ypredbyx1x2}\\)) in the direction of Model \\(\\ref{x1predbyx2}\\)’s \\(\\hat{\\gamma}_1\\) is the same as the estimated standard error of \\(\\hat{\\beta}^{''}_1\\) in Model \\(\\ref{ypredbyx1resids}\\).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>An Approach for Extracting Standard Errors in the $\\hat{\\gamma}_1$ Direction</span>"
    ]
  }
]